{"version":3,"sources":["01_main.js"],"names":["buttonStart","document","querySelector","buttonLap","buttonPause","buttonRestart","stopwatchMinutes","stopwatchSeconds","stopwatchMSeconds","tileButtons","tileList","timerId","addEventListener","watchButtons","lapNumb","e","buttonTarget","target","fixedDate","Date","stranim","querySelectorAll","buttonSwitch","textContent","style","display","forEach","item","setInterval","timer","classList","add","tileListElemCount","childElementCount","children","remove","lastElementChild","tileTime","lapTime","previosDiff","dataset","time","gap","insertAdjacentHTML","generateItem","setTimeout","firstElementChild","diffMin","diffSec","diffMSec","millisRound","clearInterval","animationPlayState","innerHTML","numb","msec","firsElem","secondElem","thirdElem","minutesRound","Math","floor","secondsRound"],"mappings":"AAAA,MAAMA,YAAcC,SAASC,cAAc,6BACrCC,UAAYF,SAASC,cAAc,2BACnCE,YAAcH,SAASC,cAAc,6BACrCG,cAAgBJ,SAASC,cAAc,+BACvCI,iBAAmBL,SAASC,cAAc,YAC1CK,iBAAmBN,SAASC,cAAc,YAC1CM,kBAAoBP,SAASC,cAAc,aAC3CO,YAAcR,SAASC,cAAc,4BACrCQ,SAAWT,SAASC,cAAc,yBAIxC,IAAIS,QAFJF,YAAYG,iBAAiB,QAASC,cAGtC,IAAIC,QAAU,EAEd,SAASD,aAAaE,GACnB,MAAMC,EAAeD,EAAEE,OACjBC,EAAY,IAAIC,KAChBC,EAAUnB,SAASoB,iBAAiB,YACpCC,EAAerB,SAASoB,iBAAiB,eAE/C,OAAQL,EAAaO,aAClB,IAAK,QACFP,EAAaQ,MAAMC,QAAU,OAC7BH,EAAaI,QAAQC,GAAQA,EAAKH,MAAMC,QAAU,SAClDd,QAAUiB,YAAYC,MAAO,IAAKX,GAClCE,EAAQM,QAAQC,GAAQA,EAAKG,UAAUC,IAAI,sBAC3C,MACH,IAAK,MACF,MAAMC,EAAoBtB,SAASuB,kBAE/BD,EAAoB,GAAGtB,SAASwB,SAAS,GAAGJ,UAAUK,OAAO,QAC7DH,EAAoB,GAAGtB,SAAS0B,iBAAiBD,SAErD,MAAME,EAAWpC,SAASC,cAAc,yBAClCoC,EAAUhC,iBAAiBiB,YAAc,IAAMhB,iBAAiBgB,YAAc,IAAMf,kBAAkBe,YAC5GT,UAEA,MAAMyB,EAA2B,OAAbF,EAAoBA,EAASG,QAAQC,KAAO/B,SAAS8B,QAAQE,IACjFhC,SAASiC,mBAAmB,aAAcC,aAAa9B,QAASwB,IAChErC,SAASC,cAAc,yBAAyBsC,QAAQC,KAAO/B,SAAS8B,QAAQE,IAEhFG,WAAW,KACRnC,SAASoC,kBAAkBhB,UAAUC,IAAI,SACzC,IAEH,MAAMgB,EAAU9C,SAASC,cAAc,aACjC8C,EAAU/C,SAASC,cAAc,aACjC+C,EAAWhD,SAASC,cAAc,cAGxCgD,YAFgBxC,SAAS8B,QAAQE,IAAMH,EAElBQ,EAASC,EAASC,GACvC,MACH,IAAK,QACFtC,QAAUwC,cAAcxC,SACxBS,EAAQM,QAAQC,GAAQA,EAAKH,MAAM4B,mBAAqB,UACxDhD,YAAYoB,MAAMC,QAAU,OAC5BpB,cAAcmB,MAAMC,QAAU,QAC9B,MACH,IAAK,UACFT,EAAaQ,MAAMC,QAAU,OAC7BH,EAAaI,QAAQC,GAAQA,EAAKH,MAAMC,QAAU,QAClDzB,YAAYwB,MAAMC,QAAU,QAC5BL,EAAQM,QAAQC,GAAQA,EAAKQ,UAC7BlC,SAASC,cAAc,kBAAkByC,mBAAmB,aAAc,kDAC1E1C,SAASC,cAAc,oBAAoByC,mBAAmB,aAAc,8CAC5ErC,iBAAiBiB,YAAc,KAC/BhB,iBAAiBgB,YAAc,KAC/Bf,kBAAkBe,YAAc,IAEhCT,QAAU,EACVJ,SAAS2C,UAAY,IAK9B,SAAST,aAAaU,EAAMb,GACzB,MAAO,iHAEwDa,yEACVb,6KAMxD,SAASZ,MAAMX,GACZ,MACMwB,EADU,IAAIvB,KACED,EAEtBR,SAAS8B,QAAQE,IAAMA,EAEvBQ,YAAYR,EAAKpC,iBAAkBC,iBAAkBC,mBAGxD,SAAS0C,YAAYK,EAAMC,EAAUC,EAAYC,GAC9C,MAAMC,EAAeC,KAAKC,MAAMN,EAAO,IAAO,IACxCO,EAAeF,KAAKC,MAAMN,EAAO,KAAQ,GAG5CC,EAASjC,YADRoC,EAAe,GACO,IAAMA,EAENA,EAIvBF,EAAWlC,YADVuC,EAAe,GACS,IAAMA,EAENA,EAE5BJ,EAAUnC,YAAcqC,KAAKC,MAAMN,EAAO,KAAO","file":"../js/main.min.js","sourcesContent":["const buttonStart = document.querySelector('.stopwatch-tile__btnstart')\r\nconst buttonLap = document.querySelector('.stopwatch-tile__btnlap')\r\nconst buttonPause = document.querySelector('.stopwatch-tile__btnpause')\r\nconst buttonRestart = document.querySelector('.stopwatch-tile__btnrestart')\r\nconst stopwatchMinutes = document.querySelector('.minutes')\r\nconst stopwatchSeconds = document.querySelector('.seconds')\r\nconst stopwatchMSeconds = document.querySelector('.mseconds')\r\nconst tileButtons = document.querySelector('.stopwatch-tile__buttons')\r\nconst tileList = document.querySelector('.stopwatch-tile__list')\r\n\r\ntileButtons.addEventListener('click', watchButtons)\r\n\r\nlet timerId\r\nlet lapNumb = 0\r\n\r\nfunction watchButtons(e) {\r\n   const buttonTarget = e.target\r\n   const fixedDate = new Date()\r\n   const stranim = document.querySelectorAll('.stranim')\r\n   const buttonSwitch = document.querySelectorAll('.btn-switch')\r\n\r\n   switch (buttonTarget.textContent) {\r\n      case 'Start':\r\n         buttonTarget.style.display = 'none'\r\n         buttonSwitch.forEach(item => item.style.display = 'block')\r\n         timerId = setInterval(timer, 100, fixedDate)\r\n         stranim.forEach(item => item.classList.add('animation-minhand'))\r\n         break\r\n      case 'Lap':\r\n         const tileListElemCount = tileList.childElementCount\r\n         \r\n         if (tileListElemCount > 2) tileList.children[2].classList.remove('show')\r\n         if (tileListElemCount > 3) tileList.lastElementChild.remove()\r\n\r\n         const tileTime = document.querySelector('.stopwatch-tile__time')\r\n         const lapTime = stopwatchMinutes.textContent + ':' + stopwatchSeconds.textContent + '.' + stopwatchMSeconds.textContent\r\n         lapNumb++\r\n         \r\n         const previosDiff = tileTime !== null ? tileTime.dataset.time : tileList.dataset.gap\r\n         tileList.insertAdjacentHTML('afterbegin', generateItem(lapNumb, lapTime))\r\n         document.querySelector('.stopwatch-tile__time').dataset.time = tileList.dataset.gap\r\n\r\n         setTimeout(() => {\r\n            tileList.firstElementChild.classList.add('show')\r\n         }, 10)\r\n\r\n         const diffMin = document.querySelector('.diff-min')\r\n         const diffSec = document.querySelector('.diff-sec')\r\n         const diffMSec = document.querySelector('.diff-msec')\r\n         const lapDiff = tileList.dataset.gap - previosDiff\r\n\r\n         millisRound(lapDiff, diffMin, diffSec, diffMSec)\r\n         break\r\n      case 'Pause':\r\n         timerId = clearInterval(timerId)\r\n         stranim.forEach(item => item.style.animationPlayState = 'paused')\r\n         buttonPause.style.display = 'none'\r\n         buttonRestart.style.display = 'block'\r\n         break\r\n      case 'Restart':\r\n         buttonTarget.style.display = 'none'\r\n         buttonSwitch.forEach(item => item.style.display = 'none')\r\n         buttonStart.style.display = 'block'\r\n         stranim.forEach(item => item.remove())\r\n         document.querySelector('.stopwatch__bg').insertAdjacentHTML('afterbegin', '<div class=\"stopwatch__minutes stranim\"></div>')\r\n         document.querySelector('.stopwatch__mini').insertAdjacentHTML('afterbegin', '<div class=\"stopwatch__sec stranim\"></div>')\r\n         stopwatchMinutes.textContent = '00'\r\n         stopwatchSeconds.textContent = '00'\r\n         stopwatchMSeconds.textContent = '0'\r\n\r\n         lapNumb = 0\r\n         tileList.innerHTML = ''\r\n         break\r\n   }\r\n}\r\n\r\nfunction generateItem(numb, time) {\r\n   return `\r\n   <div class=\"stopwatch-tile__item fade\">\r\n      <div class=\"stopwatch-tile__lap\">Lap<span class=\"lapnumb\">${numb}</span></div>\r\n      <div class=\"stopwatch-tile__time\" data-time=\"0\">${time}</div>\r\n      <div class=\"stopwatch-tile__diff\">+<span class=\"diff-min\">00</span>:<span class=\"diff-sec\">00</span>.<span class=\"diff-msec\">0</span></div>\r\n   </div>\r\n   `\r\n}\r\n\r\nfunction timer(fixedDate) {\r\n   const nowDate = new Date()\r\n   const gap = nowDate - fixedDate\r\n\r\n   tileList.dataset.gap = gap\r\n\r\n   millisRound(gap, stopwatchMinutes, stopwatchSeconds, stopwatchMSeconds)\r\n}\r\n\r\nfunction millisRound(msec, firsElem, secondElem, thirdElem) {\r\n   const minutesRound = Math.floor(msec / 1000 / 60)\r\n   const secondsRound = Math.floor(msec / 1000) % 60\r\n\r\n   if (minutesRound < 10) {\r\n      firsElem.textContent = '0' + minutesRound\r\n   }  else {\r\n      firsElem.textContent = minutesRound\r\n   }\r\n\r\n   if (secondsRound < 10) {\r\n      secondElem.textContent = '0' + secondsRound\r\n   } else {\r\n      secondElem.textContent = secondsRound\r\n   }\r\n   thirdElem.textContent = Math.floor(msec / 100) % 10\r\n}"]}